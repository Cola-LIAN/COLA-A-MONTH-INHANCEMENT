{"version":3,"sources":["redux/actions.js","components/Hamburger/Hamburger.js","components/Player/Player.js","components/ListItem/ListItem.js","components/SongList/SongList.js","components/AccountInfo/AccountInfo.js","components/Frame/Frame.js","App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["showMusicListAction","dispatch","a","async","fetch","window","location","origin","fetched","json","list","type","Hamburger","props","cid","className","children","id","Player","regulateTime","seconds","date","Date","setSeconds","toISOString","substr","produceNewSongIndex","evtId","newSongIndex","musicListLength","musicList","length","currentIndex","indexOf","currentMusic","startSliderUpdateLoop","setInterval","setState","currentTime","audio","sliderUpdateLoopId","stopSliderUpdateLoop","clearInterval","state","timeLoop","resetSliderStatus","handleClick","switchPlayButton","play","pause","switchMusic","addEventListener","isPaused","paused","favoriteIconColor","handleChange","evt","time","handleMouseDown","handleMouseUp","totalTime","this","audioDom","current","Math","ceil","duration","showMusicList","createRef","src","source","ref","name","artist","Slider","max","value","onChange","onMouseDown","onMouseUp","onClick","e","target","style","color","Component","connect","newId","newIndex","ListItem","song","fontSize","album","wholeState","pickMusic","item","pickMusicAction","useEffect","Fragment","map","index","key","AccountInfo","Avatar","alt","Frame","App","Boolean","hostname","match","initialState","isPlay","reducer","action","filter","newCurrentMusic","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2a727ca.chunk.js","sourcesContent":["const showMusicList = 'SHOW_MUSIC_LIST';\n// const playAndPause = 'PLAY_AND_PAUSE';\nconst pickMusic = 'PICK_MUSIC';\nconst switchMusic = 'SWITCH_MUSIC';\n\nconst showMusicListAction = () => async (dispatch) => {\n  let fetched = await fetch(window.location.origin + '/mongo');\n  let list = await fetched.json();\n\n  dispatch({\n    type: showMusicList,\n    list,\n  });\n}\n\nconst pickMusicAction = (item) => {\n  return {\n    type: pickMusic,\n    item\n  }\n}\n\nconst switchMusicAction = (newIndex) => {\n  return {\n    type: switchMusic,\n    newIndex\n  }\n}\n\nexport {showMusicList,\n        pickMusic,\n        switchMusic,\n        showMusicListAction,\n        pickMusicAction,\n        switchMusicAction}","//External Dependencies\nimport React from 'react';\n\n//Internal Dependencies\nimport './Hamburger.css';\n\n//Component Definition\nconst Hamburger = (props) => {\n\n  const { cid } = props;\n  \n  return(\n    <div className='hamburgerBottom'>\n      {props.children}\n      <div className='hamburgerTop' id={cid}></div>\n    </div>\n  )\n}\n\nexport default Hamburger","//External Dependencies\nimport React, { Component, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport PlayCircleFilledWhiteIcon from '@material-ui/icons/PlayCircleFilledWhite';\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\nimport { Slider } from '@material-ui/core';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\n//Internal Dependencies\nimport './Player.css';\nimport { showMusicListAction, switchMusicAction} from '../../redux/actions';\nimport Hamburger from '../Hamburger/Hamburger.js';\n\n//Component Definition\nclass Player extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      currentTime: 0,\n      totalTime: 0,\n      isPaused: true,\n      sliderUpdateLoopId: 0,\n      favoriteIconColor: '#000'\n    };\n    this.audio = null;\n  }\n\n  componentDidMount(){\n    this.audio = this.audioDom.current;\n    this.audio.addEventListener('loadedmetadata', () => {\n      this.setState({\n        totalTime: Math.ceil(this.audio.duration),\n        isPaused: this.audio.paused\n      }); \n    }, false);\n\n    this.props.showMusicList();\n\n    this.audio.addEventListener('ended', () => {\n      this.handleClick('nextIcon');\n    });\n  }\n\n//helper function \n  regulateTime = (seconds) => {\n    const date = new Date(null);\n    date.setSeconds(seconds);\n    return date.toISOString().substr(14, 5);\n  }\n\n  produceNewSongIndex = (evtId) => {\n    let newSongIndex;\n    let musicListLength = this.props.musicList.length;\n    let currentIndex = this.props.musicList.indexOf(this.props.currentMusic);\n\n    if(evtId === 'nextIcon'){\n      currentIndex !== (musicListLength-1) ? \n      newSongIndex = currentIndex + 1 : newSongIndex = 0;\n    }else if (evtId === 'previousIcon'){\n      currentIndex !== 0 ?\n      newSongIndex = currentIndex - 1 : newSongIndex = (musicListLength-1);\n    }\n    return newSongIndex\n  }\n\n//Slider status\n  startSliderUpdateLoop = () => {\n    const id = setInterval(() => {\n        this.setState({currentTime: this.audio.currentTime})\n    }, 1000)\n    this.setState({\n      sliderUpdateLoopId: id\n    });\n  }\n\n  stopSliderUpdateLoop = () => {\n    clearInterval(this.state.timeLoop); //stop loop by id\n  }\n\n  resetSliderStatus = () => {\n    this.setState({currentTime: 0});\n  }\n\n//Player operation\n  handleClick = (id) => {\n\n  //play and pause\n    if(id === 'playIcon'){\n      this.switchPlayButton();\n      this.audio.play();\n      this.startSliderUpdateLoop();\n    }else if( id === 'pauseIcon'){\n      this.switchPlayButton();\n      this.audio.pause();\n      this.stopSliderUpdateLoop();\n    }\n\n  //switch song\n    else if( id === 'previousIcon' || id === 'nextIcon'){\n      let newSongIndex = this.produceNewSongIndex(id);\n      this.props.switchMusic(newSongIndex);//switch a new song by index\n      this.stopSliderUpdateLoop();\n      this.resetSliderStatus();\n\n      //keep the play or pause status\n      // if(!this.audio.paused){\n        this.audio.addEventListener('loadedmetadata', () => {\n          this.startSliderUpdateLoop();\n          this.audio.play();\n          this.setState({\n            isPaused: this.audio.paused\n          }); \n        }, false);\n      // }\n    } \n\n  //Favorite songs\n    else if ( id === 'favoriteIcon'){\n      this.setState({\n        favoriteIconColor: this.state.favoriteIconColor ==='red'?'#000':'red'\n      })\n    }\n  }\n\n  handleChange = (evt, time) => {\n    this.setState({currentTime: time});\n  }\n\n  handleMouseDown = () => {\n    this.stopSliderUpdateLoop();\n    this.audio.pause();\n  }\n\n  handleMouseUp = () => {\n    this.audio.currentTime = this.state.currentTime;\n    if(!this.state.isPaused){\n      this.audio.play();\n      this.startSliderUpdateLoop();\n    }\n  }\n\n  switchPlayButton = () => {\n    this.setState({\n      isPaused: !this.state.isPaused   \n    })\n  }\n\n\nrender(){\n  this.audioDom = createRef();\n  return(\n    <div className='playerFrame'>\n      <audio src={this.props.currentMusic.source} ref={this.audioDom} />\n      <div className='songInfo'>\n        <div className='songCoverContainer'>\n          <div className='songCover'></div>\n        </div>\n        <div className='TextInfoContainer'>\n          <span id='songTitle'>{this.props.currentMusic.name} -{this.props.currentMusic.artist}</span>\n          <div>\n            <Slider \n              id='linearProgressBar' \n              max={this.state.totalTime} \n              value={this.state.currentTime} \n              onChange={this.handleChange} \n              onMouseDown={this.handleMouseDown}\n              onMouseUp={this.handleMouseUp}/>\n            <span id='timeProgress'>{this.regulateTime(this.state.currentTime)}/{this.props.currentMusic.time}</span> \n          </div>       \n        </div>\n      </div>\n      <div className='playIcon' onClick={(e) => this.handleClick(e.target.id)}>\n        <FavoriteBorderIcon id='favoriteIcon' style={{color: this.state.favoriteIconColor}}/>\n\n        <Hamburger cid='previousIcon'>\n          <SkipPreviousIcon id='previous'/>\n        </Hamburger>\n        \n        {this.state.isPaused?\n          <Hamburger cid='playIcon'>\n            <PlayCircleFilledWhiteIcon id='play'/>\n          </Hamburger>\n          :\n          <Hamburger cid='pauseIcon' >\n            <PauseCircleFilledIcon id='pause'/>\n          </Hamburger>\n        } \n\n        <Hamburger cid='nextIcon'>\n          <SkipNextIcon id='next'/>\n        </Hamburger>\n      </div>\n    </div>\n  )}\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentMusic: state.currentMusic,\n    musicList: state.musicList\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    showMusicList: () => {dispatch(showMusicListAction())},\n    switchMusic: (newId) => {dispatch(switchMusicAction(newId))}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player)","//External Dependencies\nimport React from 'react';\n\n//Internal Dependencies\nimport './ListItem.css';\n\n\n//Component Definition\nconst ListItem = (props) => {\n  const { song, onClick, fontSize } = props;\n  const { name, artist, album, time} = song;\n\n  return (\n    <div className='listItem' style={{fontSize: fontSize}} onClick={onClick}>\n      <div className='container titleContainer' >\n        {name}\n      </div>\n      <div className='container artistContainer' >\n        {artist}\n      </div>\n      <div className='container albumContainer'>\n        {album}\n      </div>\n      <div className='container timeContainer'>\n        {time}\n      </div>\n    </div>\n  )\n}\n\nexport default ListItem","//External Dependencies\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n// import {}\n\n//Internal Dependencies\nimport './SongList.css';\nimport ListItem from '../ListItem/ListItem.js';\nimport { showMusicListAction, pickMusicAction} from '../../redux/actions';\n\n//Component Definition\nconst SongList = (props) => {\n\n  const {wholeState, showMusicList, pickMusic} = props;\n  useEffect(showMusicList, []);\n\n  const handlePickMusic = (item) => {\n    pickMusic(item);\n  }\n\n  return (\n    <React.Fragment>\n      <div className='songListTitle'>\n        <strong>Song List</strong>\n      </div>\n      <ListItem \n        song={{\n          name: 'Name',\n          time: 'Time',\n          artist: 'Artist',\n          album: 'Album'\n        }}\n       fontSize='17px'/>  \n      {\n        wholeState.musicList.map((song, index) => {\n        return(\n        <ListItem\n          key={index}\n          className={song}\n          song={song}\n          fontSize='5px'\n          onClick={() => handlePickMusic(song)} \n          />\n         )})\n      }\n    </React.Fragment>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    wholeState: state\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    showMusicList: () => {dispatch(showMusicListAction())},\n    pickMusic: (item) => {dispatch(pickMusicAction(item))}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongList);","//External Dependencies\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\n\n//Internal Dependencies\nimport './AccountInfo.css';\n\n//Component Definition\nconst AccountInfo = () => {\n  return(\n    <div className='userInfo'>\n      <Avatar id='avatar' alt=\"C Sharp\" src=\"avatar1.jpg\"/>\n      <label className='userName'>Cola LIAN</label>\n    </div>\n  )\n}\n\nexport default AccountInfo","//External Dependencies\nimport React from 'react';\n\n//Internal Dependencies\nimport './Frame.css';\nimport Player from '../Player/Player.js';\nimport SongList from '../SongList/SongList.js';\nimport AccountInfo from '../AccountInfo/AccountInfo.js';\n\n//Component Definition\nconst Frame = () => {\n  return (\n    <div className=\"frame\">\n      <div className='header'></div>\n      <div className='body'>\n        <div className=\"accountInfo\">\n          <AccountInfo />\n        </div>\n        <div className=\"songList\">\n          <SongList />\n        </div>\n      </div>\n      <Player />\n    </div>\n  );\n}\n\nexport default Frame;","//External Dependencies\nimport React from 'react';\n\n//Internal Dependencies\nimport './App.css';\nimport Frame from './components/Frame/Frame.js'\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Frame />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { showMusicList, pickMusic, switchMusic } from './actions';\n\nconst initialState = {\n  musicList: [],\n  currentMusic: {},\n  isPlay: false,\n  currentIndex: null\n}\n\nconst reducer = (state=initialState, action) => {\n \n  if(action.type === showMusicList){\n    return({\n      ...state,\n      musicList: action.list,\n      currentMusic: action.list[0],\n    })\n  }\n  \n  else if(action.type === pickMusic){\n    return({\n      ...state,\n      currentMusic: action.item,\n    })\n  }\n\n  else if(action.type === switchMusic){\n    let [newCurrentMusic] = state.musicList.filter(item => state.musicList.indexOf(item)=== action.newIndex  )\n    return({\n      ...state,\n      currentMusic: newCurrentMusic,\n    })\n  }\n\n  return state\n}\n\n\nexport default reducer","//External Dependencies\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n//Internal Dependencies\nimport reducer from './reducer';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\nlet store = createStore(\n  reducer,\n  composeEnhancers(\n    applyMiddleware(thunk),\n  )\n);\n\nexport default store\n","//External Dependencies\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n//Internal Dependenciess\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\n\n\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}